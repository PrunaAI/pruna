[tool.ruff]
exclude = ["test_*.py"]
line-length = 121

[tool.ruff.lint]
ignore = ["ANN002", "ANN003", "ANN401", "C901", "D100", "D104", "D401", "D406", "C408"]
select = ["A", "C", "CPY", "D", "E", "ERA", "F", "FIX", "I", "N", "SIM", "T20", "W", "FA"]
preview = true # enable preview features for copyright checking

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["ERA", "CPY", "T"]  # commented out code is intended for tutorials
"tests/*" = ["T20", "CPY"]  # print statements are intended for tests
"docs/*" = ["CPY"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-copyright]
author = "- Pruna AI GmbH"

[tool.mypy]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/pruna"]

[tool.coverage.report]
omit = ["src/pruna/tests/*"]
show_missing = true
skip_covered = false

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"

addopts = [
    "--cov=src/pruna",
    "--cov-report=term-missing",
    "--cov-config=pyproject.toml",
]

python_files = "test_*.py"

testpaths = [
    "src/pruna/tests",
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"  # regular PyPI

[[tool.uv.index]]
name = "pruna_internal"
url = "https://prunaai.pythonanywhere.com/simple/"  # Pruna Pythonanywhere
default = true # default = True makes this index the lowest prio

[tool.uv.sources]
gptqmodel = [
  { index = "pruna_internal", marker = "sys_platform != 'darwin' or platform_machine != 'arm64'"},
  { index = "pypi", marker = "sys_platform == 'darwin' and platform_machine == 'arm64'"},
]

[project]
name = "pruna"
version = "0.2.6"
description = "Smash your AI models"
authors = [
    {name = "Pruna AI", email = "hello@pruna.ai"}
]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.9,<3.13"
keywords = ["AI", "machine learning", "model optimization", "pruning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "torch==2.7.0",
    "torchvision==0.22.0",
    "torchmetrics[image]",
    "requests>=2.31.0",
    "transformers",
    "pytorch-lightning",
    "huggingface-hub[hf-xet]>=0.30.0",
    "datasets<=3.5.0",
    "numpy>=1.24.4",
    "diffusers>=0.21.4",
    "torch_pruning",
    "ConfigSpace>=1.2.1",
    "sentencepiece",
    "librosa",
    "openvino",
    "soundfile",
    "DeepCache",
    "colorama",
    "opentelemetry-api>=1.30.0",
    "opentelemetry-sdk>=1.30.0",
    "opentelemetry-exporter-otlp>=1.29.0",
    "codecarbon",
    "pynvml",
    "thop",
    "timm",
    "bitsandbytes; sys_platform != 'darwin' or platform_machine != 'arm64'",
    "optimum-quanto>=0.2.5",
    "optimum",
    "ctranslate2==4.6.0",
    "whisper-s2t==1.3.1",
    "hqq==0.2.6",
    "torchao",
    "llmcompressor",
]

[project.optional-dependencies]
stable-fast = [
    "xformers==0.0.30",
    "stable-fast-pruna==1.0.7",
]
# dependencies are added here because the wheels aren't bundling them
gptq = [
    "logbar",
    "tokenicer",
    "threadpoolctl",
    "device-smi",
    "random-word",
    "gptqmodel==4.0.0.dev0+cu126torch2.7; sys_platform != 'darwin' or platform_machine != 'arm64'",
    "gptqmodel; sys_platform == 'darwin' and platform_machine == 'arm64'",
]
full = [
    "xformers==0.0.30",
    "stable-fast-pruna==1.0.7",
]
dev = [
    "wget",
    "python-dotenv",
    "jsonschema",
    "jupyterlab",
    "ipykernel",
    "notebook",
    "platformdirs",
    "jsonschema",
    "blobfile",
    "pillow>=9.5.0",
    "pre-commit",
    "twine",
    "pyc-wheel",
    "ruff",
    "numpydoc-validation",
    "pytest",
    "pytest-cov",
    "coverage",
    "docutils",
    "mypy",
    "types-PyYAML",
    "logbar",
]
cpu = []

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pruna"]
include = ["**/*.so"]
exclude = [
    "tests*",
    "docs*",
]