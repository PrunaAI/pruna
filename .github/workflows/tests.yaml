name: Code Quality & Tests

permissions:
  contents: read
  pull-requests: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ci-${{ github.repository }}-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linting:
    runs-on: ubuntu-22.04
    outputs:
      success: ${{ steps.lint-check.outputs.success }}

    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ./.github/actions/setup-uv-project

      - name: Get changed Python files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.py
          files_ignore: |
            tests/**

      - name: Run ruff on changed Pruna code
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: astral-sh/ruff-action@v3
        with:
          version: "latest"
          src: ${{ steps.changed-files.outputs.all_changed_files }}

      - name: Run mypy on Pruna code
        run: mypy --show-traceback src/pruna

      - name: Run docstring checks with pytest
        run: pytest -m "style"

      - name: Set lint check output
        id: lint-check
        run: echo "success=true" >> $GITHUB_OUTPUT
  test:
    runs-on: pruna-cpu

    strategy:
      matrix:
        python-version: ["3.10"]

    env:
      HF_ENDPOINT: https://hf-mirror.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ./.github/actions/setup-uv-project

      - name: Set test worker count
        run: echo "PYTEST_WORKERS=$(( $(nproc) - 1 ))" >> "$GITHUB_ENV" # leave 1 for the system process

      - name: Run tests
        run: |
          pytest -n ${{ env.PYTEST_WORKERS }} -m "cpu and not slow and not high_cpu"
